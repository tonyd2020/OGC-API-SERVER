{
	"info": {
		"_postman_id": "c22eea5f-e14a-4881-920f-ddc88de9ad93",
		"name": "7 POST to Feature Of Interest.postman_collection",
		"description": "# Introduction\nThis is a description of the IoT Layer process that is used to translate the data from the PairTree Data model to the OGC/STA data model.\n\n\n# Overview\nThe conversion process is as follows:\n(IoT Layer command to AWS API GW) => (AWS Lambda request) => (FROST-Server responds)\n\n# Authentication\n**IoT Layer operations:**  Use Authentication Bearer at the AWS API Gateway and basic authentication at the FROST-Server (requires 'admin' level access).\n\n**Service Layer operations:**  Use Authentication Bearer at the AWS API Gateway and basic authentication at the FROST-Server (requires 'read' level access).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Original PairTree Data received by the AWS API Gateway",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{data}}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_Gateway}}/FeaturesOfInterest",
					"host": [
						"{{API_Gateway}}"
					],
					"path": [
						"FeaturesOfInterest"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Transformed Data received by the FROST Server",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Generated from location 8\",\r\n    \"encodingType\": \"application/geo+json\",\r\n    \"feature\": {\r\n        \"type\": \"Point\",\r\n        \"coordinates\": [\r\n            8.1,\r\n            50\r\n        ]\r\n    },\r\n    \"name\": \"FoI for location \",\r\n    \"Observaton\": [\r\n        {\r\n            \"@iot.id\": 5\r\n        }\r\n    ]\r\n}"
				},
				"url": {
					"raw": "{{FROST_url}}/FeaturesOfInterest",
					"host": [
						"{{FROST_url}}"
					],
					"path": [
						"FeaturesOfInterest"
					]
				},
				"description": "# Request description\nThe JSON object that is sent to the 'Locations' record consists of the following fields:\n\n|   Field           |                            Data source                      |\n| ----------------- | ----------------------------------------------------------- |\n| result            | \"Data stream from {OemSensor-Table-Schema.name}\"            |\n| resultTime        | OemSensor-Table-Schema.time                                 |\n| parameters        | Insert the Sample-Table-Schema as a JSON object             |\n| Datastream        | {\"@iot.id\": (ID of the 'Datastream' entity)}                |\n\nEnsure that the values are added to the correct Datastream\n\n# Response description\nIf the request is successful the FROST-Server returns a response code of **201**. \n\n**NOTE:** Also included with the response is the ID of the newly created entity in the 'Datastream' table."
			},
			"response": []
		},
		{
			"name": "Get a list of Features of Interest",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{client_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{API_Gateway_GET}}/v1.0/FeaturesOfInterest",
					"host": [
						"{{API_Gateway_GET}}"
					],
					"path": [
						"v1.0",
						"FeaturesOfInterest"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a list of Features of Interest for Things ID = 1 and Datastream id = 1",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{client_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{API_Gateway_GET}}/1.0/FeaturesOfInterest(9)/Observations",
					"host": [
						"{{API_Gateway_GET}}"
					],
					"path": [
						"1.0",
						"FeaturesOfInterest(9)",
						"Observations"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://frost-server.anthonydera.com/FROST-Server/v1.0/FeaturesOfInterest(10)/Observations",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://frost-server.anthonydera.com/FROST-Server/v1.0/FeaturesOfInterest(10)/Observations",
					"protocol": "https",
					"host": [
						"frost-server",
						"anthonydera",
						"com"
					],
					"path": [
						"FROST-Server",
						"v1.0",
						"FeaturesOfInterest(10)",
						"Observations"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "admin",
				"type": "string"
			},
			{
				"key": "username",
				"value": "admin",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}