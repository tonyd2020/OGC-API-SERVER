{
	"info": {
		"_postman_id": "902018f5-dd32-4367-b6c8-b5a6792ac500",
		"name": "5 POST to a Datastream.postman_collection",
		"description": "# Introduction\nThis is a description of the IoT Layer process that is used to translate the data from the PairTree Data model to the OGC/STA data model.\n\n\n# Overview\nThe conversion process is as follows:\n(IoT Layer command to AWS API GW) => (AWS Lambda request) => (FROST-Server responds).\n\nThe 'Datastream' object describes the time-series related set of values generated by a sensor (either periodically or threshold-triggered). Generally a sensor will generate a single datastream which will exist until it is powered down or reset.\n\n# Authentication\n**IoT Layer operations:** Use Authentication Bearer at the AWS API Gateway and basic authentication at the FROST-Server (requires 'admin' level access).\n\n**Service Layer operations:** Use Authentication Bearer at the AWS API Gateway and basic authentication at the FROST-Server (requires 'read' level access).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Original PairTree Data received by the AWS API Gateway",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Sample-Table-Schema\": {\r\n        \"id\": 1,\r\n        \"metric\": \"Indoor Temperature\",\r\n        \"height\": 45.04,\r\n        \"longitude\": -100.456,\r\n        \"latitude\": 123.345,\r\n        \"time\": \"2021-05-06T14:54:11.311730\",\r\n        \"value\": 283.56\r\n    },\r\n    \"OemSensor-Table-Schema\": {\r\n        \"name\": \"Tony Test\",\r\n        \"description\": \"Tony Test 14 Sep\",\r\n        \"id\": 100\r\n    },\r\n    \"Relations\": {\r\n        \"Thing\": 123,\r\n        \"Sensor\": 49,\r\n        \"ObservedProperty\": 46\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{API_Gateway}}/Datastreams",
					"host": [
						"{{API_Gateway}}"
					],
					"path": [
						"Datastreams"
					]
				}
			},
			"response": [
				{
					"name": "Original PairTree Data received by the AWS API Gateway",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Sample-Table-Schema\": {\r\n        \"id\": 1,\r\n        \"metric\": \"Indoor Temperature\",\r\n        \"height\": 45.04,\r\n        \"longitude\": -100.456,\r\n        \"latitude\": 123.345,\r\n        \"time\": \"2021-05-06T14:54:11.311730\",\r\n        \"value\": 283.56\r\n    },\r\n    \"Thing\": {\r\n        \"@iot.id\": 2\r\n    },\r\n    \"Sensor\": {\r\n        \"@iot.id\": 1\r\n    },\r\n    \"ObservedProperty\": {\r\n        \"@iot.id\": 2\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_Gateway}}/Datastreams",
							"host": [
								"{{API_Gateway}}"
							],
							"path": [
								"Datastreams"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Transformed Data received by the FROST Server",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\" : \"Observations of my plant's soil moisture over 24 hours\",\r\n  \"description\" : \"\",\r\n  \"observationType\": \"\",\r\n  \"unitOfMeasurement\": {\r\n    \"name\": \"Sample-Table-Schema.metric\",\r\n    \"symbol\": \"\",\r\n    \"definition\": \"\"\r\n  },\r\n  \"Thing\": {\"@iot.id\": 1},\r\n  \"Sensor\": {\"@iot.id\": 1},\r\n  \"ObservedProperty\": {\"@iot.id\": 1}\r\n}"
				},
				"url": {
					"raw": "{{FROST_url}}/Datastreams",
					"host": [
						"{{FROST_url}}"
					],
					"path": [
						"Datastreams"
					]
				},
				"description": "# Request description\nThe JSON object that is sent to the 'Locations' record consists of the following fields:\n\n|   Field           |                            Data source                      |\n| ----------------- | ----------------------------------------------------------- |\n| name              | \"Data stream from {OemSensor-Table-Schema.name}\"            |\n| description       | Optional (Leave as empty string)                            |\n| observationType   | Optional (Leave as empty string)                            |\n| unitOfMeasurement | \"Sample-Table-Schema.metric\"                                |\n| Thing             | {\"@iot.id\": (ID of the 'Thing' entity being observed)}      |\n| Sensor            | {\"@iot.id\": (ID of the 'Sensor' entity used to observe)}    |\n| ObservedProperty  | {\"@iot.id\": (ID of the 'ObservedProperty' being measured )} |\n\n\n# Response description\nIf the request is successful the FROST-Server returns a response code of **201**. \n\n**NOTE:** Also included with the response is the ID of the newly created entity in the 'Datastream' table. To maintain data integrity, it is important that this ID number  is appended to the URL during subsequent POSTing of dependent entitities such as the 'Observation' enity."
			},
			"response": []
		},
		{
			"name": "Get a list of datastreams",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{client_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{API_Gateway_GET}}/Datastreams",
					"host": [
						"{{API_Gateway_GET}}"
					],
					"path": [
						"Datastreams"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a list of observations for Thing ID =1",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{client_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{API_Gateway_GET}}/Datastreams",
					"host": [
						"{{API_Gateway_GET}}"
					],
					"path": [
						"Datastreams"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "admin",
				"type": "string"
			},
			{
				"key": "username",
				"value": "admin",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}