{
	"info": {
		"_postman_id": "d45a1cb2-c5b6-46cc-9f2a-f5e64f224af6",
		"name": "1 POST to the Things Table.postman_collection",
		"description": "# Introduction\nThis is a description of the IoT Layer process that is used to translate the data from the PairTree Data model to the OGC/STA data model.\n\n\n# Overview\nThe conversion process is as follows:\n(IoT Layer command to AWS API GW) => (AWS Lambda request) => (FROST-Server responds).\n\nA 'Things' entity must exist before all other entities of the OGC/STA data model is created. An example of a 'Things' entity may include a fishpond or a greenhouse).\n\n# Authentication\n**IoT Layer operations:** Use Authentication Bearer at the AWS API Gateway and basic authentication at the FROST-Server (requires 'admin' level access).\n\n**Service Layer operations:** Use Authentication Bearer at the AWS API Gateway and basic authentication at the FROST-Server (requires 'read' level access).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Original PairTree Data received by the AWS API Gateway",
			"protocolProfileBehavior": {
				"followAuthorizationHeader": false
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Device-Table-Schema\": {\r\n        \"active\": \"True\",\r\n        \"id\": 1000,\r\n        \"device_eui\": \"aaaa.bbbb.cccc.1234\",\r\n        \"decomm\": \"None\",\r\n        \"location_name\": \"Test\",\r\n        \"installed\": \"2021-05-06T14:54:11.282857\",\r\n        \"longitude\": \"None\",\r\n        \"latitude\": \"None\",\r\n        \"comments\": \"Tony Dera testing 14 Oct @ 5:50pm\",\r\n        \"network_eui\": \"\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_Gateway}}/Things",
					"host": [
						"{{API_Gateway}}"
					],
					"path": [
						"Things"
					]
				}
			},
			"response": [
				{
					"name": "Original PairTree Data received by the AWS API Gateway",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Device-Table-Schema\": {\r\n        \"active\": \"True\",\r\n        \"id\": 1,\r\n        \"device_eui\": \"aaaa.bbbb.cccc.1234\",\r\n        \"decomm\": \"None\",\r\n        \"location_name\": \"Greenhouse\",\r\n        \"installed\": \"2021-05-06T14:54:11.282857\",\r\n        \"longitude\": \"None\",\r\n        \"latitude\": \"None\",\r\n        \"comments\": \"West side Temperature sensor\",\r\n        \"network_eui\": \"10.1.0.123\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_Gateway}}/Things",
							"host": [
								"{{API_Gateway}}"
							],
							"path": [
								"Things"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Transformed Data received by the FROST Server",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test Writing to id 1\",\r\n    \"description\": \"The Kitchen in my house\",\r\n    \"properties\": {\r\n        \"active\": \"True\",\r\n        \"id\": 2,\r\n        \"device_eui\": \"aaaa.bbbb.cccc.1234\",\r\n        \"decomm\": \"None\",\r\n        \"location_name\": \"Greenhouse\",\r\n        \"installed\": \"2021-05-06T14:54:11.282857\",\r\n        \"longitude\": \"None\",\r\n        \"latitude\": \"None\",\r\n        \"comments\": \"West side Temperature sensor\",\r\n        \"network_eui\": \"10.1.0.123\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{FROST_url}}/Things",
					"host": [
						"{{FROST_url}}"
					],
					"path": [
						"Things"
					]
				},
				"description": "# Request Payload description\nThe JSON object that is sent to the 'Things' record consists of the following fields:\n\n|   Field       |                            Data source                      |\n| ------------- | ----------------------------------------------------------- |\n| name          | Use the \"location_name\" field of the Device-Table-Schema    |\n| description   | Use the \"comments\" field of the Device-Table-Schema         |\n| properties    | Insert the Device-Table-Schema JSON object                  |\n\n# Error Codes\n| Response Code |                  Cause                  |\n| ------------- | --------------------------------------- |\n|     200       | Request was processed successfully      | \n|     401       | Unauthorized. Token was rejected        |\n|     400       | Bad Request. Incorrect JSON data sent   |\n\n\n# Response description\nIf the request is successful the FROST-Server returns a response code of **201**. \n**NOTE:** Also included with the response is the ID of the newly created entity in the 'Things' table. To maintain data integrity, it is important that this ID number  is appended to the URL during subsequent Posting of dependent entities such as SENSOR and SAMPLE data that are associated with the DEVICE."
			},
			"response": []
		},
		{
			"name": "Service Layer command to GET a list of Things",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{client_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{API_Gateway_GET}}/v1.0/Things?$count=true&$select=@iot.count",
					"host": [
						"{{API_Gateway_GET}}"
					],
					"path": [
						"v1.0",
						"Things"
					],
					"query": [
						{
							"key": "$count",
							"value": "true"
						},
						{
							"key": "$select",
							"value": "@iot.count"
						}
					]
				},
				"description": "# Request description\nThis GET request provides a detailed list of all 'Things' that exists in the FROST Server."
			},
			"response": []
		},
		{
			"name": "Service Layer command to GET a list of Things Copy",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{client_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{API_Gateway_GET}}/Things",
					"host": [
						"{{API_Gateway_GET}}"
					],
					"path": [
						"Things"
					]
				},
				"description": "# Request description\nThis GET request provides a detailed list of all 'Things' that exists in the FROST Server."
			},
			"response": []
		},
		{
			"name": "GET an entity",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{client_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{API_Gateway_GET}}/v1.0/Things?$select=@iot.id,description;$count=true",
					"host": [
						"{{API_Gateway_GET}}"
					],
					"path": [
						"v1.0",
						"Things"
					],
					"query": [
						{
							"key": "$select",
							"value": "@iot.id,description;$count=true"
						}
					]
				},
				"description": "# Request description\nThe GET request uses a parameter to return details of a signle 'Things' entity (ID=3 in the example below)"
			},
			"response": []
		},
		{
			"name": "Deleting an entity Copy",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{FROST_url}}/Things(4)",
					"host": [
						"{{FROST_url}}"
					],
					"path": [
						"Things(4)"
					]
				},
				"description": "# Request description\nThe GET request uses a parameter to return details of a signle 'Things' entity (ID=3 in the example below)"
			},
			"response": []
		},
		{
			"name": "Patching an entity",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\" : \" Old Greenhouse (From Device-Table-Schema)\",\r\n  \"description\" : \"The Kitchen in my house\",\r\n  \"properties\" : {\r\n    \"active\": \"True\",\r\n    \"id\": 2,\r\n    \"device_eui\": \"aaaa.bbbb.cccc.1234\",\r\n    \"decomm\": \"None\",\r\n    \"location_name\": \"Greenhouse\",\r\n    \"installed\": \"2021-05-06T14:54:11.282857\",\r\n    \"longitude\": \"None\",\r\n    \"latitude\": \"None\",\r\n    \"comments\": \"West side Temperature sensor\",\r\n    \"network_eui\": \"10.1.0.123\"\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{FROST_url}}/Things(2)",
					"host": [
						"{{FROST_url}}"
					],
					"path": [
						"Things(2)"
					]
				},
				"description": "# Request description\nThe GET request uses a parameter to return details of a signle 'Things' entity (ID=3 in the example below)"
			},
			"response": [
				{
					"name": "Patching an entity",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\" : \" Old Greenhouse (From Device-Table-Schema)\",\r\n  \"description\" : \"The Kitchen in my house\",\r\n  \"properties\" : {\r\n    \"active\": \"True\",\r\n    \"id\": 2,\r\n    \"device_eui\": \"aaaa.bbbb.cccc.1234\",\r\n    \"decomm\": \"None\",\r\n    \"location_name\": \"Greenhouse\",\r\n    \"installed\": \"2021-05-06T14:54:11.282857\",\r\n    \"longitude\": \"None\",\r\n    \"latitude\": \"None\",\r\n    \"comments\": \"West side Temperature sensor\",\r\n    \"network_eui\": \"10.1.0.123\"\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{FROST_url}}/Things(2)",
							"host": [
								"{{FROST_url}}"
							],
							"path": [
								"Things(2)"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Expose-Headers",
							"value": "Location"
						},
						{
							"key": "Content-Length",
							"value": "0"
						},
						{
							"key": "Date",
							"value": "Sat, 24 Jul 2021 00:33:59 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=20"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	]
}